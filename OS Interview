1. What is an operating system?
  Operating System is an interface between the user and the computer hardware.It is responsible for the execution of all the processes, Resource Allocation, CPU management, FileManagement    
Key Functions:
Process Management: Controls the execution of processes, including task scheduling, process creation and termination, and multitasking.
Memory Management: Manages the computer's memory, allocating space for programs and data and ensuring efficient utilization and protection of memory resources.
File System Management: Provides a way to store, retrieve, and organize files on storage devices, such as hard drives and SSDs.
Device Management: Manages device communication via drivers, enabling the OS to interact with peripheral devices like printers, scanners, and network cards.
User Interface: Provides a way for users to interact with the computer, either through a command-line interface (CLI) or a graphical user interface (GUI).and many other tasks.

main purpose: 
The main purpose of an operating system (OS) is to make a computer system convenient and efficient to use

2.Explain types of OS?

Batch os:
  A batch Processing Operating System (BatchOS) is an open-source operating system designed to manage multiple jobs in sequence.without user   
  interaction.
  Uses: Ideal for large-scale data processing tasks such as payroll, billing systems, and scientific computations where jobs are repetitive and 
  require minimal user interaction.
  
Time-Sharing OS:
  Explanation: Allows multiple users to access the system simultaneously by allocating processor time to each user.
  Uses: Common in systems where many users need to interact with the system at once, such as university mainframes, business servers, and online 
  transaction processing systems.
  
Distributed OS:
  Explanation:A distributed operating system (DOS) is a type of operating system (OS) that connects multiple computer systems through a single 
  communication channel. Each system has its    own processors and memory,
  Uses: Employed in environments like cloud computing and data centers where tasks and resources are spread across multiple machines to improve 
  performance and reliability.

Network OS:
  Explanation:a network operating system(NOS) is software that connects multiple devices and computers on the network and allows them to share 
  resources on the network.
  Uses: Found in local area networks (LANs) and large enterprises to manage shared resources like files, printers, and internet access across 
  multiple computers.

Real-Time OS (RTOS):
  Explanation: Provides immediate processing and response to external events within a strict time constraint.
  Uses: Essential in applications requiring precise timing, such as embedded systems in medical devices, automotive control systems, industrial 
  automation, and robotics.

3.what is process and program?
  Program	                                                                                     Process
Program contains a set of instructions designed to complete a specific task.	      Process is an instance of an executing program.

Program is a static entity.	                                                          Process is a dynamic entity.

Program contains instructions 	                                                     Process is a sequence of instruction execution. 



4.Explain Process States?

  New:
  Explanation: The process is being created.
  Details: When a process is first initiated, it is in the "new" state. It has not yet started execution.
  
  Ready:
  Explanation: The process is ready to run but is waiting for CPU time.
  Details: Once the process is created, it moves to the "ready" state, where it waits in a queue for its turn to be executed by the CPU.
  
  Running:
  Explanation: The process is currently being executed by the CPU.
  Details: When the process scheduler assigns CPU time to a process, it transitions from the "ready" state to the "running" state.
  
  Blocked (or Waiting):
  Explanation: The process is waiting for an event to occur (such as I/O completion).
  Details: If a process needs to wait for resources, like input/output operations, it enters the "blocked" state until the required event occurs.
  
  Terminated:
  Explanation: The process has finished execution.
  Details: After a process completes its execution or is terminated by the operating system, it moves to the "terminated" state, where it waits to 
  be removed from the process table.

5.Explain different Types of scheduling Algorithms?
  1. First-Come, First-Served (FCFS) Scheduling:
  Description: Processes are executed in the order they arrive in the ready queue. The CPU is allocated to the first process in the queue, which 
  runs until it completes or is blocked.
  Advantages: Simple to implement.
  
  2. Shortest Job Next (SJN) / Shortest Job First (SJF) Scheduling:
  Description: The process with the shortest burst time (execution time) is selected for execution next. Also known as Shortest Job First (SJF).
  Advantages: Minimizes average waiting time and turnaround time.
  
  3. Round Robin (RR) Scheduling:
  Description:Round Robin is a CPU scheduling algorithm where each process is cyclically assigned a fixed time slot. It is the preemptive version 
  of the First come First Serve CPU Scheduling algorithm. 
  Advantages: Fairness in resource allocation, prevents starvation.
  
  4. Priority Scheduling:
  Description: Each process is assigned a priority, and the CPU is allocated to the process with the highest priority. Processes with the same 
  priority are scheduled using FCFS.
  Advantages: Allows for different levels of priority for different processes, suitable for real-time systems.

6.what is process Synchronization?
  Process synchronization in OS is the task of coordinating the execution of processes in such a way that no two processes can access the same 
  shared data and resources.

7.what is DeadLock?
  A Deadlock is a situation where each of the computer process waits for a resource which is being assigned to some another process. In this 
  situation, none of the process gets executed

8.Explain the conditions necessary for a deadlock to occur.
  four necessary conditions for dead lock occur.
  1.Hold and Wait: A process is holding at least one resource and waiting for another resource
  
  2.Mutual Exclusion: one or more than one resources are non sharable-only one process can use it
  
  3.NO Preemption:A resource cannot taken from a process unless the process release the resource
  
  4.Circular Wait:A set of process are waiting for each other in circular form.

9. how can you prevent from dead lock?
  deadlock can be prevented by eliminating any of the four necessary conditions, which are mutual exclusion, hold and wait, no preemption, and 
  circular wait. 

10.what are deadlock avoidance Algorithm?
  Deadlock avoidance algorithms are techniques used to dynamically allocate resources to processes in such a way that deadlocks are prevented from 
  occurring.
  1. Banker's Algorithm:
  Description: Banker's algorithm is a resource allocation algorithm that ensures that the system will never enter a deadlock state by carefully 
  managing the allocation of resources.
  2. Resource Allocation Graph (RAG):
  Description: Resource Allocation Graph is a graphical representation used to track the allocation and request of resources by processes.

11.explain dead lock recovery Algorithms?
  Deadlock recovery algorithms are techniques used to recover from deadlock situations once they have occurred.
  1. Process Termination and Rollback:
  Description: In this approach, one or more processes involved in the deadlock are selected for termination. The terminated processes release 
  their held resources, allowing other processes to continue execution.
  Rollback: If a process is terminated, its state may need to be rolled back to a safe checkpoint to maintain consistency.
  2. Resource Preemption:
  Description: Resources held by processes involved in the deadlock are forcibly preempted and allocated to other processes.

12.explain semaphores?
  Semaphores are just normal variables used to coordinate the activities of multiple processes in a computer system. They are used to      enforce   mutual exclusion, avoid race conditions, and implement synchronization between processes.
  The process of using Semaphores provides two operations: wait (P) and signal (V). The wait operation decrements the value of the     
  semaphore, and the signal operation increments the value of the semaphore.

13.what is memory management?
  Memory management is the process of controlling and coordinating a computer's main memory. It ensures that blocks of memory space are properly 
  managed and allocated so the operating system (OS), applications and other running processes.

14.explain pagging?
 Paging is a storage mechanism used to retrieve processes from the secondary storage into the main memory in the form of pages.The main   idea 
 behind the paging is to divide each process in the form of pages.

15.explain segmentation?
  Segmentation is a memory management technique in which the memory is divided into the variable size parts. Each part is known as a     
  segment which can be allocated to a process.
  The details about each segment are stored in a table called a segment table. Segment table is stored in one (or many) of the segments.
  Segment table contains mainly two information about segment:
  Base: It is the base address of the segment
  Limit: It is the length of the segment.

16.Why is virtual memory important?
Answer:Virtual memory is important for several reasons:
  Increases Program Size: It allows programs to run that require more memory than the physically available RAM.
  Isolation: It provides isolation between processes, enhancing system stability and security.
  Efficient Memory Use: It allows for more efficient use of physical memory by using techniques such as paging and segmentation.
  Multitasking: It supports multitasking, allowing multiple applications to run simultaneously by ensuring that each has sufficient memory.

17.How does virtual memory work?
Answer:Virtual memory works by using a combination of hardware and software mechanisms:
  Paging: The memory is divided into fixed-sized blocks called pages. The OS keeps a mapping between virtual addresses used by a program and     
  physical addresses in memory.
  Page Table: Each process has a page table that keeps track of where virtual pages are stored in physical memory.
  Page Faults: When a program tries to access a page that is not currently in physical memory, a page fault occurs. The OS then retrieves the page 
  from secondary storage (like a hard drive) and places it into RAM.
  Swap Space: This is a portion of the hard drive that is used as an extension of RAM. When physical memory is full, inactive pages are moved to 
  swap space to free up RAM for active processes.
    


18.What is thrashing in the context of virtual memory?
Answer:Thrashing occurs when a system spends more time swapping pages in and out of memory than executing instructions. This happens when the system is over-committed with too many processes competing for memory, causing a high rate of page faults. The symptoms include high disk activity, slow system performance, and low CPU utilization. 

19.Explain the concept of demand paging.
Answer:Demand paging is a technique where pages of a program are only loaded into physical memory when they are needed (i.e., on demand), rather          than loading all pages at the start. When a process tries to access a page that is not in memory, a page fault occurs, and the OS loads the        required page from disk into memory.

20.How does the operating system decide which page to swap out during a page replacement?
Answer:The OS uses a page replacement algorithm to decide which page to swap out when a page fault occurs and physical memory is full. Common page         replacement algorithms include:
      FIFO (First-In, First-Out): The oldest page in memory is swapped out.
      LRU (Least Recently Used): The page that has not been used for the longest time is swapped out.
      Optimal: The page that will not be used for the longest time in the future is swapped out.

21.define Virtual Memory.
Virtual memory is a memory management technique.that allows a Computer to use more memory than is physically available by using a portion of the hard drive as an extension of RAM. It creates an illusion of a large, continuous memory space, enabling efficient multitasking and larger application handling without being limited by physical memory constraints.

TERMINOLOGY:-

Physical Memory (RAM): The actual hardware memory installed in the system.

Address Space:
Logical (Virtual) Address Space: Addresses used by a process.
Physical Address Space: Addresses used by the hardware (RAM).

Swap Space: A portion of the disk used to extend physical memory.

Shared Memory: A method for multiple processes to access the same physical memory for communication purposes.Shared memory is a memory shared between two or more processes. 






